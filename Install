#!/bin/bash
# =====================================================
# Online Users Checker + Web Dashboard (Port 82)
# รองรับ SSH, OpenVPN, Dropbear, V2Ray (3x-ui)
# =====================================================
set -e

echo "[INFO] Updating system..."
apt update -y && apt upgrade -y
apt install -y nginx jq curl net-tools ss python3 python3-pip

# -----------------------------------------------------
# ตั้งค่า Nginx ให้ serve ที่ /server บน port 82
# -----------------------------------------------------
mkdir -p /var/www/html/server

cat >/etc/nginx/sites-available/server_checker <<'EOF'
server {
    listen 82 default_server;
    server_name _;

    root /var/www/html/server;
    index index.html;

    location / {
        try_files $uri $uri/ =404;
    }
}
EOF

ln -sf /etc/nginx/sites-available/server_checker /etc/nginx/sites-enabled/server_checker

nginx -t && systemctl restart nginx

# -----------------------------------------------------
# Script online-check.sh
# -----------------------------------------------------
cat >/usr/local/bin/online-check.sh <<'EOF'
#!/bin/bash
set -e

PANEL_URL="https://bm.xq-vpn.com:88"
USERNAME="admin"
PASSWORD=".Xq@25042561."

echo "[DEBUG] Checking users..."

# =========================
# 1) SSH / OpenVPN / Dropbear
# =========================
_ons=$(ss -nt state established | grep -E ':22 ' | wc -l)
_onop=0
[ -f /etc/openvpn/server/openvpn-status.log ] && _onop=$(grep -c "CLIENT_LIST" /etc/openvpn/server/openvpn-status.log)
_ondrp=$(pgrep dropbear | wc -l)

# =========================
# 2) V2Ray (3x-ui panel API)
# =========================
COOKIE=$(curl -sk -c - -X POST "$PANEL_URL/login" \
  -H "Content-Type: application/json" \
  -d "{\"username\":\"$USERNAME\",\"password\":\"$PASSWORD\"}" \
  | grep -o "3x-ui=[^;]*" | cut -d= -f2-)

ONLINE_JSON=$(curl -sk -X POST "$PANEL_URL/panel/inbound/onlines" \
  -H "Accept: application/json, text/plain, */*" \
  -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" \
  -H "X-Requested-With: XMLHttpRequest" \
  -b "3x-ui=$COOKIE" -k)

V2RAY_ONLINE=$(echo "$ONLINE_JSON" | jq '.obj | length')
[ -z "$V2RAY_ONLINE" ] && V2RAY_ONLINE=0

# =========================
# 3) รวมผลลัพธ์
# =========================
JSON=$(jq -n \
  --arg total "$(( _ons + _onop + _ondrp + V2RAY_ONLINE ))" \
  --arg ssh "$_ons" \
  --arg openvpn "$_onop" \
  --arg dropbear "$_ondrp" \
  --arg v2ray "$V2RAY_ONLINE" \
  '{total:$total|tonumber, ssh:$ssh|tonumber, openvpn:$openvpn|tonumber, dropbear:$dropbear|tonumber, v2ray:$v2ray|tonumber}')

echo "$JSON" > /var/www/html/server/online_app.json
EOF

chmod +x /usr/local/bin/online-check.sh

# -----------------------------------------------------
# Systemd service
# -----------------------------------------------------
cat >/etc/systemd/system/online-check.service <<'EOF'
[Unit]
Description=Online Users Checker
After=network.target

[Service]
ExecStart=/usr/local/bin/online-check.sh
Restart=always
RestartSec=30

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reexec
systemctl enable --now online-check.service

# -----------------------------------------------------
# หน้าเว็บ index.html พร้อม Chart.js
# -----------------------------------------------------
cat >/var/www/html/server/index.html <<'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Online Users (Realtime)</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
body { font-family: Arial, sans-serif; margin: 20px; }
h2 { text-align: center; }
table { width: 100%; border-collapse: collapse; margin-top: 20px; }
th, td { border: 1px solid #ddd; padding: 8px; text-align: center; }
th { background: #f2f2f2; }
</style>
</head>
<body>
<h2>Online Users (Realtime)</h2>
<table>
<thead>
<tr>
  <th>Total</th>
  <th>SSH</th>
  <th>OpenVPN</th>
  <th>Dropbear</th>
  <th>V2Ray</th>
</tr>
</thead>
<tbody id="stats"></tbody>
</table>

<canvas id="onlineChart" height="100"></canvas>

<script>
async function fetchData() {
  const res = await fetch('online_app.json?cache=' + Date.now());
  return res.json();
}

const ctx = document.getElementById('onlineChart').getContext('2d');
const onlineChart = new Chart(ctx, {
  type: 'line',
  data: {
    labels: [],
    datasets: [
      { label: 'SSH', data: [], borderColor: 'green', fill:false },
      { label: 'OpenVPN', data: [], borderColor: 'blue', fill:false },
      { label: 'Dropbear', data: [], borderColor: 'orange', fill:false },
      { label: 'V2Ray', data: [], borderColor: 'purple', fill:false }
    ]
  },
  options: { responsive: true }
});

async function updateUI() {
  const data = await fetchData();
  document.getElementById('stats').innerHTML =
    `<tr><td>${data.total}</td><td>${data.ssh}</td><td>${data.openvpn}</td><td>${data.dropbear}</td><td>${data.v2ray}</td></tr>`;

  const now = new Date().toLocaleTimeString();
  onlineChart.data.labels.push(now);
  onlineChart.data.datasets[0].data.push(data.ssh);
  onlineChart.data.datasets[1].data.push(data.openvpn);
  onlineChart.data.datasets[2].data.push(data.dropbear);
  onlineChart.data.datasets[3].data.push(data.v2ray);
  if (onlineChart.data.labels.length > 20) {
    onlineChart.data.labels.shift();
    onlineChart.data.datasets.forEach(d => d.data.shift());
  }
  onlineChart.update();
}

setInterval(updateUI, 5000);
updateUI();
</script>
</body>
</html>
EOF

echo "[DONE] ติดตั้งเสร็จแล้ว → เปิด http://YOUR-IP:82/server/"
