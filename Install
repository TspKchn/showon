#!/bin/bash
VERSION="V.1.0.0"
VERSION_FILE="/usr/local/bin/showon_version"
INSTALL_PATH="/usr/local/bin/install-online-check.sh"
MENU_PATH="/usr/local/bin/showon"
GITHUB_RAW="https://raw.githubusercontent.com/TspKchn/showon/refs/heads/main/Install"

# -------------------------------
# Save Last Update (local)
# -------------------------------
save_last_update() {
    echo "$(date '+%Y-%m-%d %H:%M:%S')" > $VERSION_FILE
}

# -------------------------------
# Detect X-UI Panel URL
# -------------------------------
detect_panel_url() {
    IP=$(hostname -I | awk '{print $1}')
    DB_PATH="/etc/x-ui/x-ui.db"
    CONF_PATH="/usr/local/x-ui/bin/config.json"
    PORT="88"

    if [ -f "$DB_PATH" ]; then
        PORT=$(sqlite3 "$DB_PATH" "SELECT port FROM settings LIMIT 1;" 2>/dev/null)
    elif [ -f "$CONF_PATH" ]; then
        PORT=$(jq -r '.port' "$CONF_PATH" 2>/dev/null)
    fi

    if [ -z "$PORT" ] || [ "$PORT" == "null" ]; then
        PORT="88"
    fi

    PANEL_URL="https://$IP:$PORT"
    SHOW_URL="https://$IP:82/server/"
}

# -------------------------------
# Get GitHub Info
# -------------------------------
get_github_info() {
    LATEST_VERSION=$(curl -fsSL "$GITHUB_RAW" | grep -m1 'VERSION=' | cut -d'"' -f2)
    LATEST_DATE=$(curl -fsSL "$GITHUB_RAW" | grep -m1 '# Last Update:' | cut -d':' -f2- | xargs)
}

# -------------------------------
# Install Function
# -------------------------------
install_script() {
    echo "[INFO] Updating system..."
    apt update -y && apt upgrade -y
    apt install -y iproute2 curl jq net-tools nginx sqlite3 bc

    echo "[INFO] Setting up Nginx..."
    mkdir -p /var/www/html/server
    cat >/etc/nginx/sites-available/server_checker <<EOF
server {
    listen 82 default_server;
    server_name _;
    root /var/www/html/server;
    index index.html;
    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF

    ln -sf /etc/nginx/sites-available/server_checker /etc/nginx/sites-enabled/server_checker
    rm -f /etc/nginx/sites-enabled/default
    nginx -t && systemctl restart nginx

    read -p "Enter X-UI Panel Username: " USERNAME
    read -p "Enter X-UI Panel Password: " PASSWORD

    # -------------------------------
    # online-check.sh
    # -------------------------------
    cat > $INSTALL_PATH <<EOF
#!/bin/bash
PANEL_URL="$PANEL_URL"
USERNAME="$USERNAME"
PASSWORD="$PASSWORD"
OUTPUT="/var/www/html/server/online_app.json"

while true; do
    COOKIE=\$(curl -sk -c - -X POST "\$PANEL_URL/login" \
        -H "Content-Type: application/json" \
        -d "{\"username\":\"\$USERNAME\",\"password\":\"\$PASSWORD\"}" | grep 3x-ui | awk '{print \$7}')

    ONLINE=\$(curl -sk -b "3x-ui=\$COOKIE" -X POST "\$PANEL_URL/panel/inbound/onlines")

    # System Info
    CPU=\$(top -bn1 | grep "Cpu(s)" | awk '{print 100-\$8}')
    RAM=\$(free -m | awk '/Mem:/ {printf "%.2f", \$3/\$2*100}')
    DISK=\$(df -h / | awk 'NR==2 {print \$5}')
    UPTIME=\$(uptime -p)

    echo "{\\"total\\":\$(echo \$ONLINE | jq '.obj | length'), \\
            \\"clients\\":\$ONLINE, \\
            \\"cpu\\":\$CPU, \\"ram\\":\$RAM, \\"disk\\":\\"$DISK\\", \\"uptime\\":\\"$UPTIME\\"}" > \$OUTPUT
    sleep 5
done
EOF

    chmod +x $INSTALL_PATH
    save_last_update

    # -------------------------------
    # index.html
    # -------------------------------
    cat > /var/www/html/server/index.html <<'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Show Online Users</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
  body { font-family: Arial, sans-serif; background: #f5f5f5; color: #333; margin:20px;}
  h1 { text-align:center; }
  .info { margin:20px auto; width:80%; }
  table { width:100%; border-collapse: collapse; margin-bottom:20px;}
  th, td { border:1px solid #ccc; padding:10px; text-align:center; }
  canvas { max-width:800px; margin:20px auto; display:block; }
</style>
</head>
<body>
<h1>Online Users Dashboard</h1>
<div class="info">
  <table>
    <tr><th>Total Online</th><th>CPU %</th><th>RAM %</th><th>Disk</th><th>Uptime</th></tr>
    <tr><td id="total">0</td><td id="cpu">0</td><td id="ram">0</td><td id="disk">0</td><td id="uptime">-</td></tr>
  </table>
</div>
<canvas id="onlineChart"></canvas>
<script>
let ctx = document.getElementById('onlineChart').getContext('2d');
let chart = new Chart(ctx, {
  type: 'bar',
  data: { labels: [], datasets: [{label:'Clients Online', data:[], backgroundColor:'blue'}]},
  options: {responsive:true, scales:{y:{beginAtZero:true}}}
});
async function fetchData(){
  try{
    let res = await fetch('online_app.json?_='+Date.now());
    let data = await res.json();
    document.getElementById('total').innerText = data.total;
    document.getElementById('cpu').innerText = data.cpu;
    document.getElementById('ram').innerText = data.ram;
    document.getElementById('disk').innerText = data.disk;
    document.getElementById('uptime').innerText = data.uptime;
    chart.data.labels = data.clients;
    chart.data.datasets[0].data = Array(data.clients.length).fill(1);
    chart.update();
  }catch(e){console.error(e);}
}
setInterval(fetchData,5000);
fetchData();
</script>
</body>
</html>
EOF

    echo "[INFO] Install completed!"
}

# -------------------------------
# Restart Services
# -------------------------------
restart_all(){ systemctl restart nginx; echo "[INFO] Restarted nginx!"; }

# -------------------------------
# Uninstall
# -------------------------------
uninstall_script(){
    rm -f $INSTALL_PATH $VERSION_FILE $MENU_PATH
    rm -f /etc/nginx/sites-available/server_checker /etc/nginx/sites-enabled/server_checker
    systemctl restart nginx
    echo "[INFO] Uninstalled!"
}

# -------------------------------
# Update
# -------------------------------
update_script(){
    curl -fsSL "$GITHUB_RAW" -o $MENU_PATH
    chmod +x $MENU_PATH
    save_last_update
    echo "[INFO] Updated!"
}

# -------------------------------
# Logs
# -------------------------------
view_logs(){ journalctl -u nginx --no-pager -n 20; }

# -------------------------------
# Fix Nginx
# -------------------------------
fix_nginx(){
    rm -f /etc/nginx/sites-enabled/server_checker.bak*
    rm -f /etc/nginx/sites-available/server_checker.bak*
    nginx -t && systemctl restart nginx
    echo "[INFO] Fixed Nginx!"
}

# -------------------------------
# Menu
# -------------------------------
while true; do
    detect_panel_url
    get_github_info
    [ -f "$VERSION_FILE" ] && LAST_UPDATE=$(cat $VERSION_FILE) || LAST_UPDATE="N/A"

    clear
    echo "===================================="
    echo "     Menu Script Show Online User"
    echo " Installed : $VERSION"
    echo " Last Update: $LAST_UPDATE"
    echo "------------------------------------"
    echo " 3X-UI Panel URL : $PANEL_URL"
    echo " Show Online URL : $SHOW_URL"
    echo "------------------------------------"
    echo " Latest GitHub Version: $LATEST_VERSION"
    echo " Latest Update Date   : $LATEST_DATE"
    echo "===================================="
    echo "1). Install Script"
    echo "2). Restart All Service"
    echo "3). Uninstall"
    echo "4). Update"
    echo "5). View Update Logs"
    echo "6). Fix Nginx"
    echo "0). Exit"
    echo "------------------------------------"
    read -p "Select option: " opt
    case $opt in
        1) install_script ;;
        2) restart_all ;;
        3) uninstall_script ;;
        4) update_script ;;
        5) view_logs ;;
        6) fix_nginx ;;
        0) exit 0 ;;
    esac
    read -p "Press enter to continue..."
done
