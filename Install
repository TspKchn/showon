#!/bin/bash
# =====================================================
# ShowOn Script Manager V.1.0.5 (Split-Files Edition)
# Author: TspKchn
# =====================================================

VERSION="V.1.0.5"

# ===== ‡∏õ‡∏£‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡πâ‡πÑ‡∏õ‡∏¢‡∏±‡∏á repo ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì =====
# ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: https://raw.githubusercontent.com/TspKchn/showon/refs/heads/main
REPO_RAW="https://raw.githubusercontent.com/TspKchn/showon/refs/heads/main"

# ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ö‡∏ô repo (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ)
SRC_ONLINE="$REPO_RAW/scripts/online-check.sh"
SRC_VNSTAT="$REPO_RAW/scripts/vnstat-traffic.sh"
SRC_V2RAY="$REPO_RAW/scripts/v2ray-traffic.sh"
SRC_SYSINFO="$REPO_RAW/scripts/sysinfo.sh"
SRC_INDEX="$REPO_RAW/web/index.html"

# ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
WWW_DIR="/var/www/html/server"
BIN_DIR="/usr/local/bin"
CONF_FILE="/etc/showon.conf"
DEBUG_LOG="/var/log/showon-debug.log"

SCRIPT_ONLINE="$BIN_DIR/online-check.sh"
SCRIPT_VNSTAT="$BIN_DIR/vnstat-traffic.sh"
SCRIPT_V2RAY="$BIN_DIR/v2ray-traffic.sh"
SCRIPT_SYSINFO="$BIN_DIR/sysinfo.sh"

SERVICE_ONLINE="/etc/systemd/system/online-check.service"
SERVICE_VNSTAT="/etc/systemd/system/vnstat-traffic.service"
SERVICE_V2RAY="/etc/systemd/system/v2ray-traffic.service"
SERVICE_SYSINFO="/etc/systemd/system/sysinfo.service"

SITE_AV="/etc/nginx/sites-available/showon"
SITE_EN="/etc/nginx/sites-enabled/showon"

GREEN="\e[32m"; RED="\e[31m"; YELLOW="\e[33m"; CYAN="\e[36m"; NC="\e[0m"

require_root() {
  if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}[ERROR]${NC} Please run as root."
    exit 1
  fi
}

header() {
  clear
  echo "==============================="
  echo "   ShowOn Script Manager ${VERSION}"
  echo "==============================="
}

press() { read -rp "Press Enter to return to menu..." _; }

# ‡πÄ‡∏î‡∏≤ interface ‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
get_nic() {
  ip -o -4 route get 8.8.8.8 2>/dev/null \
    | awk '{for(i=1;i<=NF;i++) if($i=="dev") print $(i+1)}' \
    | head -n1
}

# ===== ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏ô GitHub (‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ curl: (23)) =====
check_update() {
  local remote install_raw
  install_raw="$(curl -fsSL "$REPO_RAW/Install" || true)"

  if [[ -z "$install_raw" ]]; then
    echo "[WARN] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏≤‡∏Å GitHub ‡πÑ‡∏î‡πâ"
    return
  fi

  remote="$(printf '%s' "$install_raw" | grep -m1 '^VERSION=' | cut -d'"' -f2)"
  if [[ -z "$remote" ]]; then
    echo "[WARN] ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Install ‡πÉ‡∏ô GitHub ‡πÅ‡∏ï‡πà‡∏´‡∏≤ VERSION ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠"
    return
  fi

  if [[ "$VERSION" == "$remote" ]]; then
    echo "[OK] You are using the latest version."
  else
    echo "[UPDATE] ‡∏°‡∏µ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: $remote (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: $VERSION)"
  fi
}

write_nginx() {
  mkdir -p "$WWW_DIR"
  mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled

  cat >"$SITE_AV" <<EOF
server {
    listen 82 default_server;
    server_name _;

    location = / {
        return 302 /server/;
    }
    location /server/ {
        alias $WWW_DIR/;
        index index.html;
        autoindex off;
        add_header Cache-Control "no-store";
    }
}
EOF

  ln -sf "$SITE_AV" "$SITE_EN"

  # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö/‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î nginx ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á
  if nginx -t; then
    systemctl reload nginx 2>/dev/null || systemctl restart nginx 2>/dev/null || true
  else
    echo -e "${YELLOW}[WARN]${NC} nginx config test failed. ‡∏à‡∏∞‡∏•‡∏≠‡∏á start nginx..."
    systemctl start nginx 2>/dev/null || true
  fi

  echo -e "${GREEN}[OK]${NC} Nginx ready at :82 (/server/)"
}

download_or_die() {
  local url="$1" dst="$2"
  if ! curl -fsSL "$url" -o "$dst"; then
    echo -e "${RED}[ERROR]${NC} Download failed: $url"
    exit 1
  fi
}

install_script() {
  echo -e "${CYAN}[INFO]${NC} Installing ShowOn (${VERSION})..."
  echo -e "${CYAN}[INFO]${NC} Updating system packages..."
  apt update -y >/dev/null 2>&1 || true

  echo -e "${CYAN}[INFO]${NC} Installing dependencies..."
  apt install -y curl jq net-tools psmisc nginx iproute2 ca-certificates >/dev/null 2>&1 || true

  # ==== Detect OS version ====
  . /etc/os-release
  echo -e "${CYAN}[INFO]${NC} Detected OS: $NAME $VERSION_ID"

  # ==== Install vnStat (fix for Ubuntu 18.04) ====
  if [[ "$VERSION_ID" == "18.04" ]]; then
    echo -e "${YELLOW}[WARN]${NC} Ubuntu 18.04 ‚Üí vnStat ‡πÄ‡∏Å‡πà‡∏≤ ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö --json"
    echo -e "${CYAN}[INFO]${NC} Installing vnStat from PPA..."
    apt remove -y vnstat >/dev/null 2>&1 || true
    add-apt-repository -y ppa:ubuntuhandbook1/vnstat >/dev/null 2>&1
    apt update -y >/dev/null 2>&1
    apt install -y vnstat >/dev/null 2>&1
  else
    apt install -y vnstat >/dev/null 2>&1 || true
  fi

  systemctl enable --now vnstat >/dev/null 2>&1 || true

  mkdir -p "$WWW_DIR" "$BIN_DIR" "$(dirname "$DEBUG_LOG")"

  # ==== ‡∏ñ‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ï‡πâ‡∏ô 3x-ui ====
  echo -e "${CYAN}[INFO]${NC} ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ 3x-ui (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏Å‡∏î Enter ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏î‡πâ)"
  echo "  üëâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ '‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏™‡πâ‡∏ô' ‡πÄ‡∏ä‡πà‡∏ô:"
  echo "     https://IP:PORT/RandomPath  ‡∏´‡∏£‡∏∑‡∏≠  http://domain:port/RandomPath"
  read -rp "3X-UI URL (copy login link): " PANEL_URL
  PANEL_URL="$(echo "$PANEL_URL" | sed 's:/*$::')"  # ‡∏ï‡∏±‡∏î / ‡∏ó‡πâ‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å

  read -rp "3X-UI Username: " XUI_USER
  read -rp "3X-UI Password: " XUI_PASS
  read -rp "Limit User Online (Default: 2000): " LIMIT
  LIMIT=${LIMIT:-2000}

  # ... (‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô)
}
