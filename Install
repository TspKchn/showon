#!/bin/bash
# =====================================================================
# ShowOn Script Manager V.1.0.7 (Extended Full Edition)
# Author : TspKchn + ChatGPT
# =====================================================================
# จุดเด่นเวอร์ชันนี้ (สรุป):
# - รองรับ AGN-UDP (Hysteria) อัตโนมัติ
# - ติดตั้ง/ถอดถอน conntrack อัตโนมัติ + ปรับ timeout เหลือ 5s
# - คืนค่า default conntrack (30/180) ตอน Uninstall
# - Online Checker รองรับ agnudp → online_app.json
# - แสดง Conntrack [ON/OFF] ในเมนู
# - overwrite ทุกไฟล์ตอน Install/Update
# - ทุก service loop 5s
# =====================================================================

# ----------------- เวอร์ชัน -----------------
VERSION="V.1.0.7"

# ----------------- พาธรีโป ------------------
REPO_RAW="https://raw.githubusercontent.com/TspKchn/showon/refs/heads/main"

# ----------------- ซอร์สไฟล์ ----------------
SRC_ONLINE="$REPO_RAW/scripts/online-check.sh"
SRC_VNSTAT="$REPO_RAW/scripts/vnstat-traffic.sh"
SRC_V2RAY="$REPO_RAW/scripts/v2ray-traffic.sh"
SRC_SYSINFO="$REPO_RAW/scripts/sysinfo.sh"
SRC_INDEX="$REPO_RAW/web/index.html"

# ----------------- ตำแหน่งติดตั้ง ----------
WWW_DIR="/var/www/html/server"
BIN_DIR="/usr/local/bin"
CONF_FILE="/etc/showon.conf"
DEBUG_LOG="/var/log/showon-debug.log"

SCRIPT_ONLINE="$BIN_DIR/online-check.sh"
SCRIPT_VNSTAT="$BIN_DIR/vnstat-traffic.sh"
SCRIPT_V2RAY="$BIN_DIR/v2ray-traffic.sh"
SCRIPT_SYSINFO="$BIN_DIR/sysinfo.sh"

SERVICE_ONLINE="/etc/systemd/system/online-check.service"
SERVICE_VNSTAT="/etc/systemd/system/vnstat-traffic.service"
SERVICE_V2RAY="/etc/systemd/system/v2ray-traffic.service"
SERVICE_SYSINFO="/etc/systemd/system/sysinfo.service"

SITE_AV="/etc/nginx/sites-available/showon"
SITE_EN="/etc/nginx/sites-enabled/showon"

# ----------------- สี + เครื่องหมาย ----------
BOLD="\e[1m"; DIM="\e[2m"
GREEN="\e[32m"; RED="\e[31m"; YELLOW="\e[33m"; CYAN="\e[36m"; GRAY="\e[90m"; NC="\e[0m"
CHECK="${GREEN}✔${NC}"
CROSS="${RED}✘${NC}"

# =====================================================================
# ฟังก์ชันพื้นฐาน
# =====================================================================

require_root() {
  if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}[ERROR]${NC} Please run as root."
    exit 1
  fi
}

press() { read -rp "Press Enter to continue..." _; }

header() {
  clear
  echo "==============================="
  echo "   ShowOn Script Manager ${VERSION}"
  echo "==============================="
}

get_nic() {
  ip -o -4 route get 8.8.8.8 2>/dev/null \
    | awk '{for(i=1;i<=NF;i++) if($i=="dev") print $(i+1)}' \
    | head -n1
}

rotate_log() {
  local max=1000000
  if [[ -f "$DEBUG_LOG" && $(stat -c%s "$DEBUG_LOG") -gt $max ]]; then
    mv "$DEBUG_LOG" "$DEBUG_LOG.1"
    : > "$DEBUG_LOG"
  fi
}

download_or_die() {
  local url="$1" dst="$2"
  mkdir -p "$(dirname "$dst")"
  if ! curl -fsSL "$url" -o "$dst"; then
    echo -e "${RED}[ERROR]${NC} Download failed: $url"
    exit 1
  fi
  sed -i 's/\r$//' "$dst" 2>/dev/null || true
}

file_has_text() {
  local file="$1" pat="$2"
  grep -q "$pat" "$file" 2>/dev/null
}

ensure_exec() {
  local f="$1"
  [[ -f "$f" ]] && chmod +x "$f" 2>/dev/null || true
}

safe_mkdirs() {
  mkdir -p "$WWW_DIR" "$BIN_DIR" "$(dirname "$DEBUG_LOG")"
}

# =====================================================================
# งาน Nginx
# =====================================================================

write_nginx() {
  mkdir -p "$WWW_DIR"
  mkdir -p /etc/nginx/sites-available /etc/nginx/sites-enabled

  cat >"$SITE_AV" <<EOF
server {
    listen 82 default_server;
    server_name _;

    location = / {
        return 302 /server/;
    }
    location /server/ {
        alias $WWW_DIR/;
        index index.html;
        autoindex off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        add_header Pragma "no-cache";
        expires -1;
    }
}
EOF

  ln -sf "$SITE_AV" "$SITE_EN"

  if nginx -t; then
    systemctl reload nginx 2>/dev/null || systemctl restart nginx 2>/dev/null || true
  else
    echo -e "${YELLOW}[WARN]${NC} nginx config test failed"
    systemctl start nginx 2>/dev/null || true
  fi
  echo -e "${GREEN}[OK]${NC} Nginx ready at :82 (/server/)"
}

# =====================================================================
# ตรวจอัปเดตจาก GitHub
# =====================================================================

check_update() {
  local remote install_raw
  install_raw="$(curl -fsSL "$REPO_RAW/Install" || true)"
  if [[ -z "$install_raw" ]]; then return; fi
  remote="$(printf '%s' "$install_raw" | grep -m1 '^VERSION=' | cut -d'"' -f2)"
  if [[ -z "$remote" ]]; then return; fi
  if [[ "$VERSION" != "$remote" ]]; then
    echo -e "${CYAN}[UPDATE]${NC} มีเวอร์ชันใหม่: ${remote}"
  fi
}

# =====================================================================
# ตรวจ AGN-UDP
# =====================================================================

detect_agnudp() {
  local present=0 port=""
  if [[ -x /usr/local/bin/hysteria || -x /usr/bin/hysteria || -d /etc/hysteria ]]; then
    present=1
    if [[ -f /etc/hysteria/config.json ]]; then
      port="$(jq -r '.listen // empty' /etc/hysteria/config.json 2>/dev/null | tr -d '"' )"
      port="$(echo "$port" | sed -E 's/^\[::\]://; s/^[^:]*://; s/[^0-9].*$//')"
    fi
    [[ -z "$port" ]] && port="36712"
  fi
  echo "${present}|${port}"
}

# =====================================================================
# Conntrack Timeout Setup
# =====================================================================

setup_conntrack_5s() {
  echo -e "${CYAN}[INFO]${NC} Setting conntrack UDP timeout → 5s"
  sysctl -w net.netfilter.nf_conntrack_udp_timeout=5 >/dev/null 2>&1 || true
  sysctl -w net.netfilter.nf_conntrack_udp_timeout_stream=5 >/dev/null 2>&1 || true

  if ! grep -q "nf_conntrack_udp_timeout" /etc/sysctl.conf; then
    echo "net.netfilter.nf_conntrack_udp_timeout=5" >> /etc/sysctl.conf
  else
    sed -i 's/^net.netfilter.nf_conntrack_udp_timeout=.*/net.netfilter.nf_conntrack_udp_timeout=5/' /etc/sysctl.conf
  fi

  if ! grep -q "nf_conntrack_udp_timeout_stream" /etc/sysctl.conf; then
    echo "net.netfilter.nf_conntrack_udp_timeout_stream=5" >> /etc/sysctl.conf
  else
    sed -i 's/^net.netfilter.nf_conntrack_udp_timeout_stream=.*/net.netfilter.nf_conntrack_udp_timeout_stream=5/' /etc/sysctl.conf
  fi
}

restore_conntrack_default() {
  echo -e "${CYAN}[INFO]${NC} Restoring conntrack UDP timeout → default (30/180)"
  sysctl -w net.netfilter.nf_conntrack_udp_timeout=30 >/dev/null 2>&1 || true
  sysctl -w net.netfilter.nf_conntrack_udp_timeout_stream=180 >/dev/null 2>&1 || true
  sed -i '/net.netfilter.nf_conntrack_udp_timeout/d' /etc/sysctl.conf
  sed -i '/net.netfilter.nf_conntrack_udp_timeout_stream/d' /etc/sysctl.conf
}

# =====================================================================
# ติดตั้ง
# =====================================================================

install_script() {
  echo -e "${CYAN}[INFO]${NC} Installing ShowOn (${VERSION})..."
  apt update -y >/dev/null 2>&1 || true
  apt install -y curl jq net-tools psmisc nginx iproute2 ca-certificates vnstat conntrack >/dev/null 2>&1 || true

  systemctl enable vnstat >/dev/null 2>&1 || true
  systemctl start vnstat  >/dev/null 2>&1 || true

  safe_mkdirs
  rotate_log
  setup_conntrack_5s

  local PANEL_URL XUI_USER XUI_PASS
  if [[ -d /etc/x-ui ]]; then
    read -rp "3X-UI URL: " PANEL_URL
    PANEL_URL="$(echo "$PANEL_URL" | sed 's:/*$::')"
    read -rp "3X-UI Username: " XUI_USER
    read -rp "3X-UI Password: " XUI_PASS
  else
    PANEL_URL=""; XUI_USER=""; XUI_PASS=""
  fi

  local AGN_PRESENT="0" AGN_PORT=""
  IFS='|' read -r AGN_PRESENT AGN_PORT <<<"$(detect_agnudp)"
  [[ "$AGN_PRESENT" == "1" ]] && echo -e "${GREEN}[OK]${NC} พบ AGN-UDP (พอร์ต $AGN_PORT)"

  read -rp "Limit User Online (Default: 2000): " LIMIT
  LIMIT=${LIMIT:-2000}

  NIC=$(get_nic)
  [[ -z "$NIC" ]] && NIC="eth0"

  cat >"$CONF_FILE" <<EOF
VERSION="${VERSION}"
WWW_DIR="$WWW_DIR"
LIMIT=${LIMIT}
DEBUG_LOG="$DEBUG_LOG"
PANEL_URL="$PANEL_URL"
XUI_USER="$XUI_USER"
XUI_PASS="$XUI_PASS"
NET_IFACE="$NIC"
AGN_PRESENT=$AGN_PRESENT
AGN_PORT="$AGN_PORT"
EOF

  download_or_die "$SRC_ONLINE" "$SCRIPT_ONLINE"
  download_or_die "$SRC_VNSTAT" "$SCRIPT_VNSTAT"
  download_or_die "$SRC_V2RAY"  "$SCRIPT_V2RAY"
  download_or_die "$SRC_SYSINFO" "$SCRIPT_SYSINFO"
  ensure_exec "$SCRIPT_ONLINE" "$SCRIPT_VNSTAT" "$SCRIPT_V2RAY" "$SCRIPT_SYSINFO"

  mkdir -p "$WWW_DIR"
  download_or_die "$SRC_INDEX" "$WWW_DIR/index.html"
  chmod 644 "$WWW_DIR/index.html"

  write_nginx

  # systemd services
  cat >"$SERVICE_ONLINE" <<'EOF'
[Unit]
Description=ShowOn Online Users JSON Generator
After=network-online.target
Wants=network-online.target
[Service]
Type=simple
ExecStart=/bin/bash -c 'while true; do /usr/local/bin/online-check.sh; sleep 5; done'
Restart=always
RestartSec=2
[Install]
WantedBy=multi-user.target
EOF

  systemctl daemon-reload
  systemctl enable --now online-check.service
  echo -e "${GREEN}[OK]${NC} Installed ShowOn ${VERSION}"
}

# =====================================================================
# ถอนการติดตั้ง
# =====================================================================

uninstall_script() {
  echo -e "${CYAN}[INFO]${NC} Uninstalling..."
  systemctl stop online-check.service vnstat-traffic.service v2ray-traffic.service sysinfo.service 2>/dev/null || true
  systemctl disable online-check.service vnstat-traffic.service v2ray-traffic.service sysinfo.service 2>/dev/null || true
  rm -f "$SERVICE_ONLINE" "$SERVICE_VNSTAT" "$SERVICE_V2RAY" "$SERVICE_SYSINFO"
  systemctl daemon-reload

  rm -f "$SCRIPT_ONLINE" "$SCRIPT_VNSTAT" "$SCRIPT_V2RAY" "$SCRIPT_SYSINFO"
  rm -f "$CONF_FILE" "$DEBUG_LOG" "$SITE_AV" "$SITE_EN"
  restore_conntrack_default
  apt purge -y conntrack >/dev/null 2>&1 || true
  apt autoremove -y >/dev/null 2>&1 || true
  echo -e "${GREEN}[OK]${NC} Uninstalled completely."
}

# =====================================================================
# เมนู
# =====================================================================

show_menu() {
  header
  echo "1) Install Script"
  echo "2) Uninstall Script"
  echo "0) Exit"
  echo "==============================="
  read -rp "Choose an option [0-2]: " choice
  case "$choice" in
    1) install_script ;;
    2) uninstall_script ;;
    0) exit 0 ;;
  esac
  show_menu
}

require_root
show_menu
