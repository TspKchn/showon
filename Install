#!/bin/bash
# =====================================================
# ShowOn Script Manager V.1.0.6 (Installer)
# Author: TspKchn + ChatGPT
# =====================================================

VERSION="V.1.0.6"

# ===== GitHub Repo Path =====
REPO_RAW="https://raw.githubusercontent.com/TspKchn/showon/refs/heads/main"

# ===== Install Paths =====
BIN_DIR="/usr/local/bin"
WWW_DIR="/var/www/html/server"
CONF_FILE="/etc/showon.conf"
DEBUG_LOG="/var/log/showon-debug.log"

# ===== Colors =====
GREEN="\e[32m"; RED="\e[31m"; YELLOW="\e[33m"; CYAN="\e[36m"; NC="\e[0m"

require_root() {
  if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}[ERROR]${NC} Please run as root."
    exit 1
  fi
}

# ===== Detect NIC =====
get_nic() {
  ip -o -4 route get 8.8.8.8 2>/dev/null \
    | awk '{for(i=1;i<=NF;i++) if($i=="dev") print $(i+1)}' \
    | head -n1
}

# ===== Rotate Debug Log =====
rotate_log() {
  local max=1000000
  if [[ -f "$DEBUG_LOG" && $(stat -c%s "$DEBUG_LOG") -gt $max ]]; then
    mv "$DEBUG_LOG" "$DEBUG_LOG.1"
    : > "$DEBUG_LOG"
  fi
}

# ===== Download Function =====
download_or_die() {
  local url="$1" dst="$2"
  if ! curl -fsSL "$url" -o "$dst"; then
    echo -e "${RED}[ERROR]${NC} Download failed: $url"
    exit 1
  fi
}

# ===== Main Install =====
install_script() {
  echo -e "${CYAN}[INFO]${NC} Installing ShowOn (${VERSION})..."
  apt update -y >/dev/null 2>&1 || true
  apt install -y curl jq net-tools psmisc nginx iproute2 ca-certificates >/dev/null 2>&1 || true

  # Ubuntu 18.04 → install vnstat from PPA
  UBUNTU_VERSION=$(lsb_release -rs 2>/dev/null || echo "0")
  if [[ "$UBUNTU_VERSION" == "18.04" ]]; then
    apt install -y software-properties-common gnupg2 >/dev/null 2>&1 || true
    add-apt-repository -y ppa:unit193/vnstat >/dev/null 2>&1 || true
    apt update -y >/dev/null 2>&1 || true
    apt install -y vnstat >/dev/null 2>&1 || true
  else
    apt install -y vnstat >/dev/null 2>&1 || true
  fi

  systemctl enable vnstat >/dev/null 2>&1 || true
  systemctl start vnstat >/dev/null 2>&1 || true

  mkdir -p "$WWW_DIR" "$BIN_DIR" "$(dirname "$DEBUG_LOG")"
  rotate_log

  # ==== เขียน config ====
  NIC=$(get_nic)
  [[ -z "$NIC" ]] && NIC="eth0"

  cat >"$CONF_FILE" <<EOF
VERSION="${VERSION}"
WWW_DIR="$WWW_DIR"
LIMIT=2000
DEBUG_LOG="$DEBUG_LOG"
NET_IFACE="$NIC"
EOF
  chmod 600 "$CONF_FILE"

  # ==== ดาวน์โหลดสคริปต์หลักจาก repo ====
  download_or_die "$REPO_RAW/menu.sh" "/usr/local/bin/menu.sh"
  download_or_die "$REPO_RAW/uninstall.sh" "/usr/local/bin/uninstall.sh"
  chmod +x /usr/local/bin/menu.sh /usr/local/bin/uninstall.sh

  # ==== web files ====
  mkdir -p "$WWW_DIR"
  download_or_die "$REPO_RAW/web/index.html" "$WWW_DIR/index.html"
  chmod 644 "$WWW_DIR/index.html"

  echo -e "${GREEN}[OK]${NC} ShowOn ${VERSION} installed."
  echo -e "${CYAN}[INFO]${NC} Run: ${GREEN}menu.sh${NC} to manage scripts."

  # ==== เรียกเมนูขึ้นมาเลย ====
  /usr/local/bin/menu.sh
}

require_root
install_script
