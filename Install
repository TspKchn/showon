#!/bin/bash
VERSION="V.1.0.1"
LAST_UPDATE="$(date '+%Y-%m-%d %H:%M:%S')"

set -e

echo "[INFO] Updating system..."
apt update -y && apt upgrade -y
apt install -y curl jq net-tools iproute2 nginx

# === ตรวจสอบและ Fix Nginx อัตโนมัติ ===
fix_nginx() {
    echo "[AUTO-FIX] Rebuilding nginx config..."
    systemctl stop nginx || true
    rm -f /etc/nginx/sites-enabled/server_checker*
    rm -f /etc/nginx/sites-available/server_checker*
    mkdir -p /var/www/html/server
    cat > /etc/nginx/sites-available/server_checker <<EOF
server {
    listen 82 default_server;
    server_name _;
    root /var/www/html/server;
    index index.html;
    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF
    ln -sf /etc/nginx/sites-available/server_checker /etc/nginx/sites-enabled/server_checker
    nginx -t && systemctl restart nginx && echo "[OK] nginx fixed." || echo "[ERROR] nginx config failed!"
}
nginx -t || fix_nginx

# === หาค่า Panel URL อัตโนมัติ ===
PANEL_IP=$(hostname -I | awk '{print $1}')
PANEL_PORT=$(grep -oP '(?<="port":)\d+' /etc/x-ui/x-ui.db 2>/dev/null | head -n1)
[[ -z "$PANEL_PORT" ]] && PANEL_PORT=88
PANEL_URL="https://$PANEL_IP:$PANEL_PORT"

echo "[INFO] Detect X-UI Panel URL: $PANEL_URL"
read -p "กรอก X-UI panel username: " USERNAME
read -p "กรอก X-UI panel password: " PASSWORD

# === สคริปต์ดึงสถานะออนไลน์ ===
cat > /usr/local/bin/online-check.sh <<EOF
#!/bin/bash
PANEL_URL="$PANEL_URL"
USERNAME="$USERNAME"
PASSWORD="$PASSWORD"

COOKIE=\$(curl -sk -c - -X POST "\$PANEL_URL/login" \
    -H "Content-Type: application/json" \
    -d '{"username":"'\$USERNAME'","password":"'\$PASSWORD'"}' | grep 3x-ui | awk '{print \$7}')

ONLINE=\$(curl -sk -X POST "\$PANEL_URL/panel/inbound/onlines" \
    -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" \
    -H "X-Requested-With: XMLHttpRequest" \
    -b "3x-ui=\$COOKIE")

SSH=\$(ss -nt state established '( sport = :22 )' | tail -n +2 | wc -l)
OPENVPN=0
DROPBEAR=\$(pgrep dropbear | wc -l)

V2RAY=\$(echo \$ONLINE | jq '.obj | length')
CLIENTS=\$(echo \$ONLINE | jq -r '.obj[]?')

TOTAL=\$((SSH + OPENVPN + DROPBEAR + V2RAY))

# === JSON API ===
cat > /var/www/html/server/online_app.json <<JSON
{
  "total": \$TOTAL,
  "ssh": \$SSH,
  "openvpn": \$OPENVPN,
  "dropbear": \$DROPBEAR,
  "v2ray": \$V2RAY
}
JSON

# === สร้างหน้าเว็บ ===
cat > /var/www/html/server/index.html <<HTML
<!DOCTYPE html>
<html>
<head>
  <title>Online Users Realtime</title>
  <meta charset="utf-8"/>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <h2>Online Users (Realtime)</h2>
  <table border="1">
    <tr><th>Total</th><th>SSH</th><th>OpenVPN</th><th>Dropbear</th><th>V2Ray</th></tr>
    <tr><td>\$TOTAL</td><td>\$SSH</td><td>\$OPENVPN</td><td>\$DROPBEAR</td><td>\$V2RAY</td></tr>
  </table>

  <h3>V2Ray Clients Online</h3>
  <table border="1">
    <tr><th>Email</th></tr>
    $(for c in \$CLIENTS; do echo "<tr><td>\$c</td></tr>"; done)
  </table>

  <h3>V2Ray Realtime Traffic</h3>
  <canvas id="trafficChart"></canvas>
  <script>
    const ctx = document.getElementById('trafficChart');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Upload','Download'],
        datasets: [{
          label: 'Traffic (MB)',
          data: [Math.random()*100, Math.random()*500],
          backgroundColor: ['blue','green']
        }]
      }
    });
  </script>
</body>
</html>
HTML
EOF

chmod +x /usr/local/bin/online-check.sh

# === Systemd Service ===
cat > /etc/systemd/system/online-check.service <<EOF
[Unit]
Description=Online User Checker
After=network.target

[Service]
ExecStart=/usr/local/bin/online-check.sh
Restart=always

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reexec
systemctl enable online-check.service
systemctl restart online-check.service

echo "[OK] Install complete. Open http://$PANEL_IP:82/server/"
