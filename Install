#!/bin/bash
# ==========================================
# Show Online User Script - V.1.0.0
# Compatible: Ubuntu 18.04 - 24.04
# Author: ChatGPT (Customized for TspKchn)
# ==========================================

VERSION="V.1.0.0"
INSTALL_PATH="/usr/local/bin"
CONF_FILE="$INSTALL_PATH/showon.conf"
SERVICE_FILE="/etc/systemd/system/online-check.service"
WWW_DIR="/var/www/html/server"
ONLINE_JSON="$WWW_DIR/online_app.json"
UPDATE_LOG="/var/log/showon_update.log"

# -------------------------------
# ฟังก์ชัน: แสดงข้อความสี
# -------------------------------
info(){ echo -e "\e[32m[INFO]\e[0m $1"; }
error(){ echo -e "\e[31m[ERROR]\e[0m $1"; }
success(){ echo -e "\e[36m[SUCCESS]\e[0m $1"; }

# -------------------------------
# ฟังก์ชัน: อัปเดตระบบ + ติดตั้งแพ็กเกจ
# -------------------------------
install_deps(){
  info "Updating system..."
  apt update -y && apt upgrade -y
  apt install -y curl jq bc sqlite3 iproute2 net-tools nginx
}

# -------------------------------
# ฟังก์ชัน: ตรวจสอบ X-UI Panel Port
# -------------------------------
detect_panel(){
  # 1) หา port จาก sqlite db
  DB="/etc/x-ui/x-ui.db"
  if [[ -f "$DB" ]]; then
    PORT=$(sqlite3 "$DB" "select port from settings limit 1;")
  fi
  # 2) หา port จาก config.json
  if [[ -z "$PORT" && -f /etc/x-ui/config.json ]]; then
    PORT=$(jq -r '.webPort' /etc/x-ui/config.json 2>/dev/null)
  fi
  # 3) ค่า default
  [[ -z "$PORT" ]] && PORT=88

  IP=$(hostname -I | awk '{print $1}')
  PANEL_URL="https://${IP}:${PORT}"
  echo "PANEL_URL=\"$PANEL_URL\"" > "$CONF_FILE"
  echo "USERNAME=\"$USERNAME\"" >> "$CONF_FILE"
  echo "PASSWORD=\"$PASSWORD\"" >> "$CONF_FILE"
}

# -------------------------------
# ฟังก์ชัน: ตั้งค่า Nginx
# -------------------------------
setup_nginx(){
  info "Setting up Nginx..."
  mkdir -p $WWW_DIR
  cat > /etc/nginx/sites-available/server_checker <<EOF
server {
    listen 82 default_server;
    server_name _;
    root $WWW_DIR;
    index index.html;
    location / {
        autoindex on;
    }
}
EOF
  ln -sf /etc/nginx/sites-available/server_checker /etc/nginx/sites-enabled/
  rm -f /etc/nginx/sites-enabled/default
  nginx -t && systemctl restart nginx
}

# -------------------------------
# ฟังก์ชัน: เขียนสคริปต์ตรวจสอบออนไลน์
# -------------------------------
setup_online_check(){
cat > $INSTALL_PATH/online-check.sh <<'EOF'
#!/bin/bash
set -e
CONF_FILE="/usr/local/bin/showon.conf"
. $CONF_FILE

# Login เพื่อเอา cookie
COOKIE=$(curl -sk -c - -X POST "$PANEL_URL/login" \
  -H "Content-Type: application/json" \
  -d "{\"username\":\"$USERNAME\",\"password\":\"$PASSWORD\"}" \
  | grep 3x-ui | awk '{print $7}' | sed 's/;//')

# ยิงไปที่ onlines
RES=$(curl -sk -b "3x-ui=$COOKIE" -X POST "$PANEL_URL/panel/inbound/onlines")

SSH=$(ss -nt state established | grep -c ':22 ')
DROP=$(pgrep dropbear | wc -l)
OVPN=$(grep -c 'CLIENT_LIST' /etc/openvpn/server/openvpn-status.log 2>/dev/null || echo 0)
V2R=$(echo "$RES" | jq '.obj | length')

jq -n --argjson ssh "$SSH" --argjson drop "$DROP" \
      --argjson ovpn "$OVPN" --argjson v2r "$V2R" \
      '{total:($ssh+$drop+$ovpn+$v2r),ssh:$ssh,dropbear:$drop,openvpn:$ovpn,v2ray:$v2r}' \
      > /var/www/html/server/online_app.json
EOF

chmod +x $INSTALL_PATH/online-check.sh

# สร้าง service
cat > $SERVICE_FILE <<EOF
[Unit]
Description=Online Users Checker
After=network.target

[Service]
ExecStart=$INSTALL_PATH/online-check.sh
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reexec
systemctl enable online-check.service
systemctl restart online-check.service
}

# -------------------------------
# ฟังก์ชัน: แสดงเมนูหลัก
# -------------------------------
show_menu(){
  clear
  source $CONF_FILE
  IP=$(hostname -I | awk '{print $1}')
  SHOW_URL="https://${IP}:82/server/"
  echo "===================================="
  echo "     Menu Script Show Online User"
  echo " Installed : $VERSION"
  echo " Last Update: $(date '+%Y-%m-%d %H:%M:%S')"
  echo "------------------------------------"
  echo " 3X-UI Panel URL : $PANEL_URL"
  echo " Show Online URL : $SHOW_URL"
  echo "------------------------------------"
  echo " 1). Install Script"
  echo " 2). Restart All Service"
  echo " 3). Uninstall"
  echo " 4). Update"
  echo " 5). View Update Logs"
  echo " 6). Fix Nginx"
  echo " 0). Exit"
  echo "------------------------------------"
  read -p "Select option: " opt
  case $opt in
    1) main_install ;;
    2) systemctl restart online-check nginx ;;
    3) uninstall ;;
    4) update_script ;;
    5) cat $UPDATE_LOG ;;
    6) fix_nginx ;;
    0) exit 0 ;;
    *) echo "Invalid choice."; sleep 2 ;;
  esac
}

# -------------------------------
# ฟังก์ชัน: ติดตั้งหลัก
# -------------------------------
main_install(){
  install_deps
  read -p "กรอก X-UI panel username: " USERNAME
  read -p "กรอก X-UI panel password: " PASSWORD
  detect_panel
  setup_nginx
  setup_online_check
  success "Install complete!"
}

# -------------------------------
# ฟังก์ชัน: Uninstall
# -------------------------------
uninstall(){
  systemctl disable --now online-check.service
  rm -f $SERVICE_FILE $INSTALL_PATH/online-check.sh $CONF_FILE
  rm -rf $WWW_DIR
  success "Uninstalled!"
}

# -------------------------------
# ฟังก์ชัน: Update
# -------------------------------
update_script(){
  bash <(curl -fsSL https://raw.githubusercontent.com/TspKchn/showon/refs/heads/main/Install) update
  echo "$(date '+%Y-%m-%d %H:%M:%S') - Updated to latest" >> $UPDATE_LOG
}

# -------------------------------
# ฟังก์ชัน: Fix Nginx
# -------------------------------
fix_nginx(){
  rm -f /etc/nginx/sites-enabled/server_checker*
  rm -f /etc/nginx/sites-available/server_checker*
  setup_nginx
  success "Nginx fixed!"
}

# -------------------------------
# Main
# -------------------------------
if [[ "$1" == "update" ]]; then
  detect_panel
  setup_nginx
  setup_online_check
  exit 0
fi

while true; do show_menu; done
